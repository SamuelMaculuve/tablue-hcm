# Generated by Django 5.0.9 on 2024-11-10 00:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('prodHCM', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InsuranceCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome da empresa')),
                ('nuitNumber', models.CharField(max_length=15, verbose_name='NUIT')),
                ('phoneNumber', models.CharField(max_length=15, verbose_name='Número de celular')),
                ('date_of_activity_start', models.DateField(verbose_name='Início de actividade')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('address', models.CharField(max_length=100, verbose_name='Endereço')),
                ('district', models.CharField(max_length=100, verbose_name='Distrito')),
                ('province', models.CharField(max_length=100, verbose_name='Provincia')),
                ('contractFile', models.FileField(upload_to='InsuranceCompanyContracts/')),
                ('nuitFile', models.FileField(upload_to='InsuranceCompanyNuits/')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceCompanyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='InsurancePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Plano')),
                ('insurance_type', models.CharField(choices=[('saude', 'Saúde'), ('automovel', 'Automóvel'), ('vida', 'Vida'), ('residencial', 'Residencial'), ('viagem', 'Viagem')], max_length=100, verbose_name='Tipo de Seguro')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('cancelado', 'Cancelado'), ('suspenso', 'Suspenso'), ('expirado', 'Expirado')], default='ativo', max_length=20, verbose_name='Status do Plano')),
            ],
            options={
                'verbose_name': 'Plano de Seguro',
                'verbose_name_plural': 'Planos de Seguro',
            },
        ),
        migrations.RemoveField(
            model_name='supplier',
            name='fullname',
        ),
        migrations.AddField(
            model_name='procedure',
            name='base_price',
            field=models.DecimalField(decimal_places=2, default=2, max_digits=10, verbose_name='Preço Base'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='supplier',
            name='procedure',
            field=models.ManyToManyField(blank=True, to='prodHCM.procedure'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Nome'),
        ),
        migrations.AlterField(
            model_name='procedure',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Nome'),
        ),
        migrations.AlterField(
            model_name='subcategory',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Nome'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='address',
            field=models.CharField(max_length=100, verbose_name='Endereço'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='contractFile',
            field=models.FileField(upload_to='SupplierContracts/'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='date_of_activity_start',
            field=models.DateField(verbose_name='Início de actividade'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='district',
            field=models.CharField(max_length=100, verbose_name='Distrito'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='email',
            field=models.CharField(max_length=100, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Nome da empresa'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='nuitFile',
            field=models.FileField(upload_to='SupplierNuits/'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='nuitNumber',
            field=models.CharField(max_length=15, verbose_name='NUIT'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='phoneNumber',
            field=models.CharField(max_length=15, verbose_name='Número de celular'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='province',
            field=models.CharField(max_length=100, verbose_name='Provincia'),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome da empresa')),
                ('nuitNumber', models.CharField(max_length=15, verbose_name='NUIT')),
                ('phoneNumber', models.CharField(max_length=15, verbose_name='Número de celular')),
                ('date_of_activity_start', models.DateField(verbose_name='Início de actividade')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('address', models.CharField(max_length=100, verbose_name='Endereço')),
                ('district', models.CharField(max_length=100, verbose_name='Distrito')),
                ('province', models.CharField(max_length=100, verbose_name='Provincia')),
                ('contractFile', models.FileField(upload_to='clients/')),
                ('nuitFile', models.FileField(upload_to='clients/')),
                ('insuranceCompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prodHCM.insurancecompany')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='prodHCM.supplier')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='prodHCM.client')),
                ('insuranceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='prodHCM.insurancecompany')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='insurancecompany',
            name='insuranceCompanyType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prodHCM.insurancecompanytype'),
        ),
        migrations.AddField(
            model_name='insurancecompany',
            name='insurancePlan',
            field=models.ManyToManyField(blank=True, to='prodHCM.insuranceplan'),
        ),
        migrations.CreateModel(
            name='Beneficiaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome da empresa')),
                ('nuitNumber', models.CharField(max_length=15, verbose_name='NUIT')),
                ('phoneNumber', models.CharField(max_length=15, verbose_name='Número de celular')),
                ('date_of_activity_start', models.DateField(verbose_name='Início de actividade')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('address', models.CharField(max_length=100, verbose_name='Endereço')),
                ('district', models.CharField(max_length=100, verbose_name='Distrito')),
                ('province', models.CharField(max_length=100, verbose_name='Provincia')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prodHCM.client')),
                ('insuranceCompany', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prodHCM.insurancecompany')),
                ('insurancePlan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prodHCM.insuranceplan')),
            ],
        ),
        migrations.CreateModel(
            name='NegotiatedPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('negotiated_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço Negociado')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prodHCM.insurancecompany')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prodHCM.procedure')),
            ],
        ),
    ]
